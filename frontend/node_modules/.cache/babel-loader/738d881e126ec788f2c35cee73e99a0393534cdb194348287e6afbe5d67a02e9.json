{"ast":null,"code":"var _jsxFileName = \"/home/adnim1/Desktop/IAI-CAPSTONE/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useRef, useEffect } from \"react\";\n// import \"./App.css\";\n\n// function App() {\n//   const [messages, setMessages] = useState([\n//     { sender: \"bot\", text: \"Hello! I am your Campus Helpdesk Bot. How can I help you today?\" }\n//   ]);\n//   const [input, setInput] = useState(\"\");\n//   const messagesEndRef = useRef(null);\n\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   };\n\n//   useEffect(scrollToBottom, [messages]);\n\n//   const handleSend = async () => {\n//     if (!input.trim()) return;\n//     const userMessage = { sender: \"user\", text: input };\n//     setMessages(prev => [...prev, userMessage]);\n//     const response = await fetch(\"http://127.0.0.1:5000/api/chat\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ message: input })\n//     });\n//     const data = await response.json();\n//     const botMessage = { sender: \"bot\", text: data.reply };\n//     setMessages(prev => [...prev, botMessage]);\n//     setInput(\"\");\n//   };\n\n//   const handleKeyPress = (e) => {\n//     if (e.key === \"Enter\") handleSend();\n//   };\n\n//   return (\n//     <div className=\"chat-container\">\n//       <div className=\"chat-header\">Campus Helpdesk Chatbot</div>\n//       <div className=\"chat-messages\">\n//         {messages.map((msg, idx) => (\n//           <div key={idx} className={msg.sender === \"user\" ? \"message-user\" : \"message-bot\"}>\n//             <div className=\"bubble\">{msg.text}</div>\n//           </div>\n//         ))}\n//         <div ref={messagesEndRef} />\n//       </div>\n//       <div className=\"chat-input\">\n//         <input\n//           type=\"text\"\n//           value={input}\n//           placeholder=\"Type your message...\"\n//           onChange={(e) => setInput(e.target.value)}\n//           onKeyDown={handleKeyPress}\n//         />\n//         <button onClick={handleSend}>Send</button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n//#2\n// import React, { useState, useRef, useEffect } from \"react\";\n// import \"./App.css\";\n\n// function App() {\n//   const [messages, setMessages] = useState([\n//     { \n//       sender: \"bot\", \n//       text: \"Hello! I'm your Campus Helpdesk Assistant. I can help you with timetables, faculty information, fees, hostel details, library hours, and more. How can I assist you today?\" \n//     }\n//   ]);\n//   const [input, setInput] = useState(\"\");\n//   const [isTyping, setIsTyping] = useState(false);\n//   const messagesEndRef = useRef(null);\n\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   };\n\n//   useEffect(scrollToBottom, [messages]);\n\n//   const handleSend = async () => {\n//     if (!input.trim()) return;\n\n//     const userMessage = { sender: \"user\", text: input };\n//     setMessages(prev => [...prev, userMessage]);\n//     setInput(\"\");\n//     setIsTyping(true);\n\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:5000/api/chat\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ message: input })\n//       });\n//       const data = await response.json();\n\n//       setTimeout(() => {\n//         const botMessage = { sender: \"bot\", text: data.reply };\n//         setMessages(prev => [...prev, botMessage]);\n//         setIsTyping(false);\n//       }, 500);\n//     } catch (error) {\n//       setTimeout(() => {\n//         const errorMessage = { \n//           sender: \"bot\", \n//           text: \"Sorry, I'm having trouble connecting. Please try again later.\" \n//         };\n//         setMessages(prev => [...prev, errorMessage]);\n//         setIsTyping(false);\n//       }, 500);\n//     }\n//   };\n\n//   const handleKeyPress = (e) => {\n//     if (e.key === \"Enter\" && !e.shiftKey) {\n//       e.preventDefault();\n//       handleSend();\n//     }\n//   };\n\n//   const quickActions = [\n//     \"View my timetable\",\n//     \"Faculty information\",\n//     \"Check fees\",\n//     \"Library hours\"\n//   ];\n\n//   const handleQuickAction = (action) => {\n//     setInput(action);\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       <div className=\"chat-wrapper\">\n//         <div className=\"chat-container\">\n//           <div className=\"chat-header\">\n//             <div className=\"header-content\">\n//               <div className=\"bot-avatar\">\n//                 <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                   <path d=\"M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 5C13.66 5 15 6.34 15 8C15 9.66 13.66 11 12 11C10.34 11 9 9.66 9 8C9 6.34 10.34 5 12 5ZM12 19.2C9.5 19.2 7.29 17.92 6 15.98C6.03 13.99 10 12.9 12 12.9C13.99 12.9 17.97 13.99 18 15.98C16.71 17.92 14.5 19.2 12 19.2Z\" fill=\"currentColor\"/>\n//                 </svg>\n//               </div>\n//               <div className=\"header-text\">\n//                 <h1>Campus Helpdesk</h1>\n//                 <p className=\"status\"><span className=\"status-dot\"></span>Online</p>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"chat-messages\">\n//             {messages.length === 1 && (\n//               <div className=\"quick-actions\">\n//                 <p className=\"quick-actions-title\">Quick Actions:</p>\n//                 <div className=\"action-buttons\">\n//                   {quickActions.map((action, idx) => (\n//                     <button \n//                       key={idx} \n//                       className=\"action-btn\"\n//                       onClick={() => handleQuickAction(action)}\n//                     >\n//                       {action}\n//                     </button>\n//                   ))}\n//                 </div>\n//               </div>\n//             )}\n\n//             {messages.map((msg, idx) => (\n//               <div key={idx} className={`message ${msg.sender === \"user\" ? \"message-user\" : \"message-bot\"}`}>\n//                 {msg.sender === \"bot\" && (\n//                   <div className=\"message-avatar bot-icon\">\n//                     <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                       <path d=\"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\" fill=\"currentColor\"/>\n//                     </svg>\n//                   </div>\n//                 )}\n//                 <div className=\"bubble\">\n//                   <div className=\"bubble-text\">{msg.text}</div>\n//                   <div className=\"message-time\">\n//                     {new Date().toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' })}\n//                   </div>\n//                 </div>\n//                 {msg.sender === \"user\" && (\n//                   <div className=\"message-avatar user-icon\">\n//                     <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                       <path d=\"M12 12C14.21 12 16 10.21 16 8C16 5.79 14.21 4 12 4C9.79 4 8 5.79 8 8C8 10.21 9.79 12 12 12ZM12 14C9.33 14 4 15.34 4 18V20H20V18C20 15.34 14.67 14 12 14Z\" fill=\"currentColor\"/>\n//                     </svg>\n//                   </div>\n//                 )}\n//               </div>\n//             ))}\n\n//             {isTyping && (\n//               <div className=\"message message-bot\">\n//                 <div className=\"message-avatar bot-icon\">\n//                   <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                     <path d=\"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\" fill=\"currentColor\"/>\n//                   </svg>\n//                 </div>\n//                 <div className=\"bubble typing-indicator\">\n//                   <span></span>\n//                   <span></span>\n//                   <span></span>\n//                 </div>\n//               </div>\n//             )}\n\n//             <div ref={messagesEndRef} />\n//           </div>\n\n//           <div className=\"chat-input\">\n//             <div className=\"input-wrapper\">\n//               <input\n//                 type=\"text\"\n//                 value={input}\n//                 placeholder=\"Type your message...\"\n//                 onChange={(e) => setInput(e.target.value)}\n//                 onKeyDown={handleKeyPress}\n//                 disabled={isTyping}\n//               />\n//               <button \n//                 onClick={handleSend} \n//                 disabled={!input.trim() || isTyping}\n//                 className=\"send-btn\"\n//               >\n//                 <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                   <path d=\"M2.01 21L23 12L2.01 3L2 10L17 12L2 14L2.01 21Z\" fill=\"currentColor\"/>\n//                 </svg>\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n//@2\n// import React, { useState, useRef, useEffect } from \"react\";\n// import \"./App.css\";\n\n// function App() {\n//   const [messages, setMessages] = useState([\n//     { \n//       sender: \"bot\", \n//       text: \"Hello! I'm your Campus Helpdesk Assistant. I can help you with timetables, faculty information, fees, hostel details, library hours, and more. How can I assist you today?\" \n//     }\n//   ]);\n//   const [input, setInput] = useState(\"\");\n//   const [isTyping, setIsTyping] = useState(false);\n//   const messagesEndRef = useRef(null);\n\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   };\n\n//   useEffect(scrollToBottom, [messages]);\n\n//   const handleSend = async () => {\n//     if (!input.trim()) return;\n\n//     const userMessage = { sender: \"user\", text: input };\n//     setMessages(prev => [...prev, userMessage]);\n//     setInput(\"\");\n//     setIsTyping(true);\n\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:5000/api/chat\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ message: input })\n//       });\n//       const data = await response.json();\n\n//       setTimeout(() => {\n//         const botMessage = { sender: \"bot\", text: data.reply };\n//         setMessages(prev => [...prev, botMessage]);\n//         setIsTyping(false);\n//       }, 500);\n//     } catch (error) {\n//       setTimeout(() => {\n//         const errorMessage = { \n//           sender: \"bot\", \n//           text: \"Sorry, I'm having trouble connecting. Please try again later.\" \n//         };\n//         setMessages(prev => [...prev, errorMessage]);\n//         setIsTyping(false);\n//       }, 500);\n//     }\n//   };\n\n//   const handleKeyPress = (e) => {\n//     if (e.key === \"Enter\" && !e.shiftKey) {\n//       e.preventDefault();\n//       handleSend();\n//     }\n//   };\n\n//   const quickActions = [\n//     \"View my timetable\",\n//     \"Faculty information\",\n//     \"Check fees\",\n//     \"Library hours\"\n//   ];\n\n//   const handleQuickAction = async (action) => {\n//     setInput(action);\n\n//     const userMessage = { sender: \"user\", text: action };\n//     setMessages(prev => [...prev, userMessage]);\n//     setIsTyping(true);\n\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:5000/api/chat\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ message: action })\n//       });\n//       const data = await response.json();\n\n//       setTimeout(() => {\n//         const botMessage = { sender: \"bot\", text: data.reply };\n//         setMessages(prev => [...prev, botMessage]);\n//         setIsTyping(false);\n//         setInput(\"\");\n//       }, 500);\n//     } catch (error) {\n//       setTimeout(() => {\n//         const errorMessage = { \n//           sender: \"bot\", \n//           text: \"Sorry, I'm having trouble connecting. Please try again later.\" \n//         };\n//         setMessages(prev => [...prev, errorMessage]);\n//         setIsTyping(false);\n//         setInput(\"\");\n//       }, 500);\n//     }\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       <div className=\"chat-wrapper\">\n//         <div className=\"chat-container\">\n//           <div className=\"chat-header\">\n//             <div className=\"header-content\">\n//               <div className=\"bot-avatar\">\n//                 <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                   <path d=\"M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 5C13.66 5 15 6.34 15 8C15 9.66 13.66 11 12 11C10.34 11 9 9.66 9 8C9 6.34 10.34 5 12 5ZM12 19.2C9.5 19.2 7.29 17.92 6 15.98C6.03 13.99 10 12.9 12 12.9C13.99 12.9 17.97 13.99 18 15.98C16.71 17.92 14.5 19.2 12 19.2Z\" fill=\"currentColor\"/>\n//                 </svg>\n//               </div>\n//               <div className=\"header-text\">\n//                 <h1>Campus Helpdesk</h1>\n//                 <p className=\"status\"><span className=\"status-dot\"></span>Online</p>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"chat-messages\">\n//             {messages.length === 1 && (\n//               <div className=\"quick-actions\">\n//                 <p className=\"quick-actions-title\">Quick Actions:</p>\n//                 <div className=\"action-buttons\">\n//                   {quickActions.map((action, idx) => (\n//                     <button \n//                       key={idx} \n//                       className=\"action-btn\"\n//                       onClick={() => handleQuickAction(action)}\n//                     >\n//                       {action}\n//                     </button>\n//                   ))}\n//                 </div>\n//               </div>\n//             )}\n\n//             {messages.map((msg, idx) => (\n//               <div key={idx} className={`message ${msg.sender === \"user\" ? \"message-user\" : \"message-bot\"}`}>\n//                 {msg.sender === \"bot\" && (\n//                   <div className=\"message-avatar bot-icon\">\n//                     <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                       <path d=\"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\" fill=\"currentColor\"/>\n//                     </svg>\n//                   </div>\n//                 )}\n//                 <div className=\"bubble\">\n//                   <div className=\"bubble-text\">{msg.text}</div>\n//                   <div className=\"message-time\">\n//                     {new Date().toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' })}\n//                   </div>\n//                 </div>\n//                 {msg.sender === \"user\" && (\n//                   <div className=\"message-avatar user-icon\">\n//                     <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                       <path d=\"M12 12C14.21 12 16 10.21 16 8C16 5.79 14.21 4 12 4C9.79 4 8 5.79 8 8C8 10.21 9.79 12 12 12ZM12 14C9.33 14 4 15.34 4 18V20H20V18C20 15.34 14.67 14 12 14Z\" fill=\"currentColor\"/>\n//                     </svg>\n//                   </div>\n//                 )}\n//               </div>\n//             ))}\n\n//             {isTyping && (\n//               <div className=\"message message-bot\">\n//                 <div className=\"message-avatar bot-icon\">\n//                   <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                     <path d=\"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\" fill=\"currentColor\"/>\n//                   </svg>\n//                 </div>\n//                 <div className=\"bubble typing-indicator\">\n//                   <span></span>\n//                   <span></span>\n//                   <span></span>\n//                 </div>\n//               </div>\n//             )}\n\n//             <div ref={messagesEndRef} />\n//           </div>\n\n//           <div className=\"chat-input\">\n//             <div className=\"input-wrapper\">\n//               <input\n//                 type=\"text\"\n//                 value={input}\n//                 placeholder=\"Type your message...\"\n//                 onChange={(e) => setInput(e.target.value)}\n//                 onKeyDown={handleKeyPress}\n//                 disabled={isTyping}\n//               />\n//               <button \n//                 onClick={handleSend} \n//                 disabled={!input.trim() || isTyping}\n//                 className=\"send-btn\"\n//               >\n//                 <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                   <path d=\"M2.01 21L23 12L2.01 3L2 10L17 12L2 14L2.01 21Z\" fill=\"currentColor\"/>\n//                 </svg>\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// #3 - fully designed css using claude\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Moon, Sun, History, X, Trash2 } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: \"bot\",\n    text: \"Hello! I'm your Campus Helpdesk Assistant. I can help you with timetables, faculty information, fees, hostel details, library hours, and more. How can I assist you today?\",\n    timestamp: new Date()\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [showHistory, setShowHistory] = useState(false);\n  const [chatHistory, setChatHistory] = useState([]);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(scrollToBottom, [messages]);\n  useEffect(() => {\n    const saved = localStorage.getItem('chatHistory');\n    if (saved) {\n      try {\n        setChatHistory(JSON.parse(saved));\n      } catch (e) {\n        console.error('Failed to load history');\n      }\n    }\n  }, []);\n  const saveToHistory = (userMsg, botMsg) => {\n    const historyItem = {\n      id: Date.now(),\n      user: userMsg,\n      bot: botMsg,\n      timestamp: new Date().toISOString()\n    };\n    const newHistory = [historyItem, ...chatHistory].slice(0, 50);\n    setChatHistory(newHistory);\n    localStorage.setItem('chatHistory', JSON.stringify(newHistory));\n  };\n  const clearHistory = () => {\n    setChatHistory([]);\n    localStorage.removeItem('chatHistory');\n  };\n  const loadHistoryItem = item => {\n    setMessages([{\n      sender: \"bot\",\n      text: \"Hello! I'm your Campus Helpdesk Assistant. How can I assist you today?\",\n      timestamp: new Date()\n    }, {\n      sender: \"user\",\n      text: item.user,\n      timestamp: new Date(item.timestamp)\n    }, {\n      sender: \"bot\",\n      text: item.bot,\n      timestamp: new Date(item.timestamp)\n    }]);\n    setShowHistory(false);\n  };\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: \"user\",\n      text: input,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    const userText = input;\n    setInput(\"\");\n    setIsTyping(true);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: userText\n        })\n      });\n      const data = await response.json();\n      setTimeout(() => {\n        const botMessage = {\n          sender: \"bot\",\n          text: data.reply,\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, botMessage]);\n        setIsTyping(false);\n        saveToHistory(userText, data.reply);\n      }, 500);\n    } catch (error) {\n      setTimeout(() => {\n        const errorMessage = {\n          sender: \"bot\",\n          text: \"Sorry, I'm having trouble connecting. Please try again later.\",\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, errorMessage]);\n        setIsTyping(false);\n      }, 500);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  const quickActions = [\"View my timetable\", \"Faculty information\", \"Check fees\", \"Library hours\"];\n  const handleQuickAction = async action => {\n    const userMessage = {\n      sender: \"user\",\n      text: action,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setIsTyping(true);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: action\n        })\n      });\n      const data = await response.json();\n      setTimeout(() => {\n        const botMessage = {\n          sender: \"bot\",\n          text: data.reply,\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, botMessage]);\n        setIsTyping(false);\n        saveToHistory(action, data.reply);\n      }, 500);\n    } catch (error) {\n      setTimeout(() => {\n        const errorMessage = {\n          sender: \"bot\",\n          text: \"Sorry, I'm having trouble connecting. Please try again later.\",\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, errorMessage]);\n        setIsTyping(false);\n      }, 500);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: darkMode ? \"dark\" : \"\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gradient-to-br from-purple-500 to-purple-700 dark:from-gray-900 dark:to-gray-800 flex items-center justify-center p-4 transition-colors duration-300\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-width-4xl\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white dark:bg-gray-800 rounded-3xl shadow-2xl overflow-hidden flex flex-col h-[700px] transition-colors duration-300\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gradient-to-r from-purple-600 to-purple-800 dark:from-gray-700 dark:to-gray-900 px-6 py-4 transition-colors duration-300\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-12 h-12 bg-white/20 rounded-full flex items-center justify-center backdrop-blur\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    className: \"w-7 h-7 text-white\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\",\n                      fill: \"currentColor\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 608,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 607,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    className: \"text-xl font-bold text-white\",\n                    children: \"IAI Capstone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 612,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-white/90\",\n                    children: \"Batch-01 \\u2022 Section-14\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 613,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setShowHistory(!showHistory),\n                  className: \"p-2 hover:bg-white/10 rounded-lg transition-colors\",\n                  title: \"Chat History\",\n                  children: /*#__PURE__*/_jsxDEV(History, {\n                    className: \"w-5 h-5 text-white\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 623,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setDarkMode(!darkMode),\n                  className: \"p-2 hover:bg-white/10 rounded-lg transition-colors\",\n                  title: \"Toggle Theme\",\n                  children: darkMode ? /*#__PURE__*/_jsxDEV(Sun, {\n                    className: \"w-5 h-5 text-white\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 630,\n                    columnNumber: 33\n                  }, this) : /*#__PURE__*/_jsxDEV(Moon, {\n                    className: \"w-5 h-5 text-white\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 630,\n                    columnNumber: 74\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 13\n          }, this), showHistory && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute right-0 top-0 h-full w-80 bg-white dark:bg-gray-800 shadow-2xl z-50 border-l border-gray-200 dark:border-gray-700 transition-colors duration-300\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-semibold text-gray-900 dark:text-white\",\n                children: \"Chat History\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex gap-2\",\n                children: [chatHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: clearHistory,\n                  className: \"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\",\n                  title: \"Clear History\",\n                  children: /*#__PURE__*/_jsxDEV(Trash2, {\n                    className: \"w-4 h-4 text-gray-600 dark:text-gray-400\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 643,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setShowHistory(false),\n                  className: \"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\",\n                  children: /*#__PURE__*/_jsxDEV(X, {\n                    className: \"w-4 h-4 text-gray-600 dark:text-gray-400\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 655,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overflow-y-auto h-full pb-20\",\n              children: chatHistory.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-4 text-center text-gray-500 dark:text-gray-400\",\n                children: \"No chat history yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 21\n              }, this) : chatHistory.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => loadHistoryItem(item),\n                className: \"p-4 border-b border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer transition-colors\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm font-medium text-gray-900 dark:text-white truncate\",\n                  children: item.user\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xs text-gray-500 dark:text-gray-400 mt-1 truncate\",\n                  children: item.bot\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xs text-gray-400 dark:text-gray-500 mt-1\",\n                  children: new Date(item.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 673,\n                  columnNumber: 25\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 overflow-y-auto p-6 bg-gray-50 dark:bg-gray-900 transition-colors duration-300\",\n            children: [messages.length === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm font-semibold text-gray-600 dark:text-gray-400 mb-3\",\n                children: \"Quick Actions:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-2 gap-3\",\n                children: quickActions.map((action, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleQuickAction(action),\n                  className: \"p-3 bg-white dark:bg-gray-800 border-2 border-gray-200 dark:border-gray-700 rounded-xl text-gray-700 dark:text-gray-300 text-sm font-medium hover:border-purple-500 dark:hover:border-purple-600 hover:text-purple-600 dark:hover:text-purple-400 transition-all hover:-translate-y-0.5\",\n                  children: action\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 17\n            }, this), messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex gap-3 mb-6 ${msg.sender === \"user\" ? \"flex-row-reverse\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `w-9 h-9 rounded-full flex items-center justify-center flex-shrink-0 ${msg.sender === \"bot\" ? \"bg-gradient-to-br from-purple-600 to-purple-800 dark:from-purple-700 dark:to-purple-900\" : \"bg-gradient-to-br from-pink-500 to-red-500\"}`,\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  className: \"w-5 h-5 text-white\",\n                  children: msg.sender === \"bot\" ? /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\",\n                    fill: \"currentColor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 711,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M12 12C14.21 12 16 10.21 16 8C16 5.79 14.21 4 12 4C9.79 4 8 5.79 8 8C8 10.21 9.79 12 12 12ZM12 14C9.33 14 4 15.34 4 18V20H20V18C20 15.34 14.67 14 12 14Z\",\n                    fill: \"currentColor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 713,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 709,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1 max-w-[70%]\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `rounded-2xl p-4 ${msg.sender === \"bot\" ? \"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\" : \"bg-gradient-to-r from-purple-600 to-purple-800 dark:from-purple-700 dark:to-purple-900 text-white\"} transition-colors duration-300`,\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm leading-relaxed whitespace-pre-wrap\",\n                    children: msg.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 723,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: `text-xs mt-1 ${msg.sender === \"user\" ? \"text-right\" : \"\"} text-gray-500 dark:text-gray-400`,\n                  children: msg.timestamp.toLocaleTimeString('en-US', {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 725,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 19\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 17\n            }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-3 mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-9 h-9 rounded-full flex items-center justify-center flex-shrink-0 bg-gradient-to-br from-purple-600 to-purple-800\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  className: \"w-5 h-5 text-white\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\",\n                    fill: \"currentColor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 736,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 735,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-2xl p-4 transition-colors duration-300\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex gap-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"w-2 h-2 bg-gray-400 dark:bg-gray-500 rounded-full animate-bounce\",\n                    style: {\n                      animationDelay: '0s'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 741,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"w-2 h-2 bg-gray-400 dark:bg-gray-500 rounded-full animate-bounce\",\n                    style: {\n                      animationDelay: '0.2s'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 742,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"w-2 h-2 bg-gray-400 dark:bg-gray-500 rounded-full animate-bounce\",\n                    style: {\n                      animationDelay: '0.4s'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 743,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 740,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 transition-colors duration-300\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-3 items-center bg-gray-100 dark:bg-gray-900 rounded-2xl p-2 border-2 border-gray-200 dark:border-gray-700 focus-within:border-purple-500 dark:focus-within:border-purple-600 transition-all\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: input,\n                placeholder: \"Type your message...\",\n                onChange: e => setInput(e.target.value),\n                onKeyDown: handleKeyPress,\n                disabled: isTyping,\n                className: \"flex-1 bg-transparent px-3 py-2 outline-none text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 755,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSend,\n                disabled: !input.trim() || isTyping,\n                className: \"w-10 h-10 rounded-xl bg-gradient-to-r from-purple-600 to-purple-800 dark:from-purple-700 dark:to-purple-900 text-white flex items-center justify-center hover:scale-105 active:scale-95 disabled:opacity-40 disabled:cursor-not-allowed transition-all\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  className: \"w-5 h-5\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M2.01 21L23 12L2.01 3L2 10L17 12L2 14L2.01 21Z\",\n                    fill: \"currentColor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 770,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 769,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 597,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NLPEFszC92oGer6UURZaGe5/p70=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Moon","Sun","History","X","Trash2","jsxDEV","_jsxDEV","App","_s","messages","setMessages","sender","text","timestamp","Date","input","setInput","isTyping","setIsTyping","darkMode","setDarkMode","showHistory","setShowHistory","chatHistory","setChatHistory","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","saved","localStorage","getItem","JSON","parse","e","console","error","saveToHistory","userMsg","botMsg","historyItem","id","now","user","bot","toISOString","newHistory","slice","setItem","stringify","clearHistory","removeItem","loadHistoryItem","item","handleSend","trim","userMessage","prev","userText","response","fetch","method","headers","body","message","data","json","setTimeout","botMessage","reply","errorMessage","handleKeyPress","key","shiftKey","preventDefault","quickActions","handleQuickAction","action","className","children","viewBox","fill","d","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","length","map","toLocaleString","idx","msg","toLocaleTimeString","hour","minute","style","animationDelay","ref","type","value","placeholder","onChange","target","onKeyDown","disabled","_c","$RefreshReg$"],"sources":["/home/adnim1/Desktop/IAI-CAPSTONE/frontend/src/App.jsx"],"sourcesContent":["// import React, { useState, useRef, useEffect } from \"react\";\n// import \"./App.css\";\n\n// function App() {\n//   const [messages, setMessages] = useState([\n//     { sender: \"bot\", text: \"Hello! I am your Campus Helpdesk Bot. How can I help you today?\" }\n//   ]);\n//   const [input, setInput] = useState(\"\");\n//   const messagesEndRef = useRef(null);\n\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   };\n\n//   useEffect(scrollToBottom, [messages]);\n\n//   const handleSend = async () => {\n//     if (!input.trim()) return;\n//     const userMessage = { sender: \"user\", text: input };\n//     setMessages(prev => [...prev, userMessage]);\n//     const response = await fetch(\"http://127.0.0.1:5000/api/chat\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ message: input })\n//     });\n//     const data = await response.json();\n//     const botMessage = { sender: \"bot\", text: data.reply };\n//     setMessages(prev => [...prev, botMessage]);\n//     setInput(\"\");\n//   };\n\n//   const handleKeyPress = (e) => {\n//     if (e.key === \"Enter\") handleSend();\n//   };\n\n//   return (\n//     <div className=\"chat-container\">\n//       <div className=\"chat-header\">Campus Helpdesk Chatbot</div>\n//       <div className=\"chat-messages\">\n//         {messages.map((msg, idx) => (\n//           <div key={idx} className={msg.sender === \"user\" ? \"message-user\" : \"message-bot\"}>\n//             <div className=\"bubble\">{msg.text}</div>\n//           </div>\n//         ))}\n//         <div ref={messagesEndRef} />\n//       </div>\n//       <div className=\"chat-input\">\n//         <input\n//           type=\"text\"\n//           value={input}\n//           placeholder=\"Type your message...\"\n//           onChange={(e) => setInput(e.target.value)}\n//           onKeyDown={handleKeyPress}\n//         />\n//         <button onClick={handleSend}>Send</button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n//#2\n// import React, { useState, useRef, useEffect } from \"react\";\n// import \"./App.css\";\n\n// function App() {\n//   const [messages, setMessages] = useState([\n//     { \n//       sender: \"bot\", \n//       text: \"Hello! I'm your Campus Helpdesk Assistant. I can help you with timetables, faculty information, fees, hostel details, library hours, and more. How can I assist you today?\" \n//     }\n//   ]);\n//   const [input, setInput] = useState(\"\");\n//   const [isTyping, setIsTyping] = useState(false);\n//   const messagesEndRef = useRef(null);\n\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   };\n\n//   useEffect(scrollToBottom, [messages]);\n\n//   const handleSend = async () => {\n//     if (!input.trim()) return;\n    \n//     const userMessage = { sender: \"user\", text: input };\n//     setMessages(prev => [...prev, userMessage]);\n//     setInput(\"\");\n//     setIsTyping(true);\n\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:5000/api/chat\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ message: input })\n//       });\n//       const data = await response.json();\n      \n//       setTimeout(() => {\n//         const botMessage = { sender: \"bot\", text: data.reply };\n//         setMessages(prev => [...prev, botMessage]);\n//         setIsTyping(false);\n//       }, 500);\n//     } catch (error) {\n//       setTimeout(() => {\n//         const errorMessage = { \n//           sender: \"bot\", \n//           text: \"Sorry, I'm having trouble connecting. Please try again later.\" \n//         };\n//         setMessages(prev => [...prev, errorMessage]);\n//         setIsTyping(false);\n//       }, 500);\n//     }\n//   };\n\n//   const handleKeyPress = (e) => {\n//     if (e.key === \"Enter\" && !e.shiftKey) {\n//       e.preventDefault();\n//       handleSend();\n//     }\n//   };\n\n//   const quickActions = [\n//     \"View my timetable\",\n//     \"Faculty information\",\n//     \"Check fees\",\n//     \"Library hours\"\n//   ];\n\n//   const handleQuickAction = (action) => {\n//     setInput(action);\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       <div className=\"chat-wrapper\">\n//         <div className=\"chat-container\">\n//           <div className=\"chat-header\">\n//             <div className=\"header-content\">\n//               <div className=\"bot-avatar\">\n//                 <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                   <path d=\"M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 5C13.66 5 15 6.34 15 8C15 9.66 13.66 11 12 11C10.34 11 9 9.66 9 8C9 6.34 10.34 5 12 5ZM12 19.2C9.5 19.2 7.29 17.92 6 15.98C6.03 13.99 10 12.9 12 12.9C13.99 12.9 17.97 13.99 18 15.98C16.71 17.92 14.5 19.2 12 19.2Z\" fill=\"currentColor\"/>\n//                 </svg>\n//               </div>\n//               <div className=\"header-text\">\n//                 <h1>Campus Helpdesk</h1>\n//                 <p className=\"status\"><span className=\"status-dot\"></span>Online</p>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"chat-messages\">\n//             {messages.length === 1 && (\n//               <div className=\"quick-actions\">\n//                 <p className=\"quick-actions-title\">Quick Actions:</p>\n//                 <div className=\"action-buttons\">\n//                   {quickActions.map((action, idx) => (\n//                     <button \n//                       key={idx} \n//                       className=\"action-btn\"\n//                       onClick={() => handleQuickAction(action)}\n//                     >\n//                       {action}\n//                     </button>\n//                   ))}\n//                 </div>\n//               </div>\n//             )}\n            \n//             {messages.map((msg, idx) => (\n//               <div key={idx} className={`message ${msg.sender === \"user\" ? \"message-user\" : \"message-bot\"}`}>\n//                 {msg.sender === \"bot\" && (\n//                   <div className=\"message-avatar bot-icon\">\n//                     <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                       <path d=\"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\" fill=\"currentColor\"/>\n//                     </svg>\n//                   </div>\n//                 )}\n//                 <div className=\"bubble\">\n//                   <div className=\"bubble-text\">{msg.text}</div>\n//                   <div className=\"message-time\">\n//                     {new Date().toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' })}\n//                   </div>\n//                 </div>\n//                 {msg.sender === \"user\" && (\n//                   <div className=\"message-avatar user-icon\">\n//                     <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                       <path d=\"M12 12C14.21 12 16 10.21 16 8C16 5.79 14.21 4 12 4C9.79 4 8 5.79 8 8C8 10.21 9.79 12 12 12ZM12 14C9.33 14 4 15.34 4 18V20H20V18C20 15.34 14.67 14 12 14Z\" fill=\"currentColor\"/>\n//                     </svg>\n//                   </div>\n//                 )}\n//               </div>\n//             ))}\n            \n//             {isTyping && (\n//               <div className=\"message message-bot\">\n//                 <div className=\"message-avatar bot-icon\">\n//                   <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                     <path d=\"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\" fill=\"currentColor\"/>\n//                   </svg>\n//                 </div>\n//                 <div className=\"bubble typing-indicator\">\n//                   <span></span>\n//                   <span></span>\n//                   <span></span>\n//                 </div>\n//               </div>\n//             )}\n            \n//             <div ref={messagesEndRef} />\n//           </div>\n\n//           <div className=\"chat-input\">\n//             <div className=\"input-wrapper\">\n//               <input\n//                 type=\"text\"\n//                 value={input}\n//                 placeholder=\"Type your message...\"\n//                 onChange={(e) => setInput(e.target.value)}\n//                 onKeyDown={handleKeyPress}\n//                 disabled={isTyping}\n//               />\n//               <button \n//                 onClick={handleSend} \n//                 disabled={!input.trim() || isTyping}\n//                 className=\"send-btn\"\n//               >\n//                 <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                   <path d=\"M2.01 21L23 12L2.01 3L2 10L17 12L2 14L2.01 21Z\" fill=\"currentColor\"/>\n//                 </svg>\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n//@2\n// import React, { useState, useRef, useEffect } from \"react\";\n// import \"./App.css\";\n\n// function App() {\n//   const [messages, setMessages] = useState([\n//     { \n//       sender: \"bot\", \n//       text: \"Hello! I'm your Campus Helpdesk Assistant. I can help you with timetables, faculty information, fees, hostel details, library hours, and more. How can I assist you today?\" \n//     }\n//   ]);\n//   const [input, setInput] = useState(\"\");\n//   const [isTyping, setIsTyping] = useState(false);\n//   const messagesEndRef = useRef(null);\n\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   };\n\n//   useEffect(scrollToBottom, [messages]);\n\n//   const handleSend = async () => {\n//     if (!input.trim()) return;\n    \n//     const userMessage = { sender: \"user\", text: input };\n//     setMessages(prev => [...prev, userMessage]);\n//     setInput(\"\");\n//     setIsTyping(true);\n\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:5000/api/chat\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ message: input })\n//       });\n//       const data = await response.json();\n      \n//       setTimeout(() => {\n//         const botMessage = { sender: \"bot\", text: data.reply };\n//         setMessages(prev => [...prev, botMessage]);\n//         setIsTyping(false);\n//       }, 500);\n//     } catch (error) {\n//       setTimeout(() => {\n//         const errorMessage = { \n//           sender: \"bot\", \n//           text: \"Sorry, I'm having trouble connecting. Please try again later.\" \n//         };\n//         setMessages(prev => [...prev, errorMessage]);\n//         setIsTyping(false);\n//       }, 500);\n//     }\n//   };\n\n//   const handleKeyPress = (e) => {\n//     if (e.key === \"Enter\" && !e.shiftKey) {\n//       e.preventDefault();\n//       handleSend();\n//     }\n//   };\n\n//   const quickActions = [\n//     \"View my timetable\",\n//     \"Faculty information\",\n//     \"Check fees\",\n//     \"Library hours\"\n//   ];\n\n//   const handleQuickAction = async (action) => {\n//     setInput(action);\n    \n//     const userMessage = { sender: \"user\", text: action };\n//     setMessages(prev => [...prev, userMessage]);\n//     setIsTyping(true);\n\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:5000/api/chat\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ message: action })\n//       });\n//       const data = await response.json();\n      \n//       setTimeout(() => {\n//         const botMessage = { sender: \"bot\", text: data.reply };\n//         setMessages(prev => [...prev, botMessage]);\n//         setIsTyping(false);\n//         setInput(\"\");\n//       }, 500);\n//     } catch (error) {\n//       setTimeout(() => {\n//         const errorMessage = { \n//           sender: \"bot\", \n//           text: \"Sorry, I'm having trouble connecting. Please try again later.\" \n//         };\n//         setMessages(prev => [...prev, errorMessage]);\n//         setIsTyping(false);\n//         setInput(\"\");\n//       }, 500);\n//     }\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       <div className=\"chat-wrapper\">\n//         <div className=\"chat-container\">\n//           <div className=\"chat-header\">\n//             <div className=\"header-content\">\n//               <div className=\"bot-avatar\">\n//                 <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                   <path d=\"M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 5C13.66 5 15 6.34 15 8C15 9.66 13.66 11 12 11C10.34 11 9 9.66 9 8C9 6.34 10.34 5 12 5ZM12 19.2C9.5 19.2 7.29 17.92 6 15.98C6.03 13.99 10 12.9 12 12.9C13.99 12.9 17.97 13.99 18 15.98C16.71 17.92 14.5 19.2 12 19.2Z\" fill=\"currentColor\"/>\n//                 </svg>\n//               </div>\n//               <div className=\"header-text\">\n//                 <h1>Campus Helpdesk</h1>\n//                 <p className=\"status\"><span className=\"status-dot\"></span>Online</p>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"chat-messages\">\n//             {messages.length === 1 && (\n//               <div className=\"quick-actions\">\n//                 <p className=\"quick-actions-title\">Quick Actions:</p>\n//                 <div className=\"action-buttons\">\n//                   {quickActions.map((action, idx) => (\n//                     <button \n//                       key={idx} \n//                       className=\"action-btn\"\n//                       onClick={() => handleQuickAction(action)}\n//                     >\n//                       {action}\n//                     </button>\n//                   ))}\n//                 </div>\n//               </div>\n//             )}\n            \n//             {messages.map((msg, idx) => (\n//               <div key={idx} className={`message ${msg.sender === \"user\" ? \"message-user\" : \"message-bot\"}`}>\n//                 {msg.sender === \"bot\" && (\n//                   <div className=\"message-avatar bot-icon\">\n//                     <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                       <path d=\"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\" fill=\"currentColor\"/>\n//                     </svg>\n//                   </div>\n//                 )}\n//                 <div className=\"bubble\">\n//                   <div className=\"bubble-text\">{msg.text}</div>\n//                   <div className=\"message-time\">\n//                     {new Date().toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' })}\n//                   </div>\n//                 </div>\n//                 {msg.sender === \"user\" && (\n//                   <div className=\"message-avatar user-icon\">\n//                     <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                       <path d=\"M12 12C14.21 12 16 10.21 16 8C16 5.79 14.21 4 12 4C9.79 4 8 5.79 8 8C8 10.21 9.79 12 12 12ZM12 14C9.33 14 4 15.34 4 18V20H20V18C20 15.34 14.67 14 12 14Z\" fill=\"currentColor\"/>\n//                     </svg>\n//                   </div>\n//                 )}\n//               </div>\n//             ))}\n            \n//             {isTyping && (\n//               <div className=\"message message-bot\">\n//                 <div className=\"message-avatar bot-icon\">\n//                   <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                     <path d=\"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\" fill=\"currentColor\"/>\n//                   </svg>\n//                 </div>\n//                 <div className=\"bubble typing-indicator\">\n//                   <span></span>\n//                   <span></span>\n//                   <span></span>\n//                 </div>\n//               </div>\n//             )}\n            \n//             <div ref={messagesEndRef} />\n//           </div>\n\n//           <div className=\"chat-input\">\n//             <div className=\"input-wrapper\">\n//               <input\n//                 type=\"text\"\n//                 value={input}\n//                 placeholder=\"Type your message...\"\n//                 onChange={(e) => setInput(e.target.value)}\n//                 onKeyDown={handleKeyPress}\n//                 disabled={isTyping}\n//               />\n//               <button \n//                 onClick={handleSend} \n//                 disabled={!input.trim() || isTyping}\n//                 className=\"send-btn\"\n//               >\n//                 <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                   <path d=\"M2.01 21L23 12L2.01 3L2 10L17 12L2 14L2.01 21Z\" fill=\"currentColor\"/>\n//                 </svg>\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// #3 - fully designed css using claude\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Moon, Sun, History, X, Trash2 } from \"lucide-react\";\n\nfunction App() {\n  const [messages, setMessages] = useState([\n    { \n      sender: \"bot\", \n      text: \"Hello! I'm your Campus Helpdesk Assistant. I can help you with timetables, faculty information, fees, hostel details, library hours, and more. How can I assist you today?\",\n      timestamp: new Date()\n    }\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [showHistory, setShowHistory] = useState(false);\n  const [chatHistory, setChatHistory] = useState([]);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  useEffect(() => {\n    const saved = localStorage.getItem('chatHistory');\n    if (saved) {\n      try {\n        setChatHistory(JSON.parse(saved));\n      } catch (e) {\n        console.error('Failed to load history');\n      }\n    }\n  }, []);\n\n  const saveToHistory = (userMsg, botMsg) => {\n    const historyItem = {\n      id: Date.now(),\n      user: userMsg,\n      bot: botMsg,\n      timestamp: new Date().toISOString()\n    };\n    const newHistory = [historyItem, ...chatHistory].slice(0, 50);\n    setChatHistory(newHistory);\n    localStorage.setItem('chatHistory', JSON.stringify(newHistory));\n  };\n\n  const clearHistory = () => {\n    setChatHistory([]);\n    localStorage.removeItem('chatHistory');\n  };\n\n  const loadHistoryItem = (item) => {\n    setMessages([\n      { sender: \"bot\", text: \"Hello! I'm your Campus Helpdesk Assistant. How can I assist you today?\", timestamp: new Date() },\n      { sender: \"user\", text: item.user, timestamp: new Date(item.timestamp) },\n      { sender: \"bot\", text: item.bot, timestamp: new Date(item.timestamp) }\n    ]);\n    setShowHistory(false);\n  };\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    \n    const userMessage = { sender: \"user\", text: input, timestamp: new Date() };\n    setMessages(prev => [...prev, userMessage]);\n    const userText = input;\n    setInput(\"\");\n    setIsTyping(true);\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/chat\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ message: userText })\n      });\n      const data = await response.json();\n      \n      setTimeout(() => {\n        const botMessage = { sender: \"bot\", text: data.reply, timestamp: new Date() };\n        setMessages(prev => [...prev, botMessage]);\n        setIsTyping(false);\n        saveToHistory(userText, data.reply);\n      }, 500);\n    } catch (error) {\n      setTimeout(() => {\n        const errorMessage = { \n          sender: \"bot\", \n          text: \"Sorry, I'm having trouble connecting. Please try again later.\",\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, errorMessage]);\n        setIsTyping(false);\n      }, 500);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  const quickActions = [\n    \"View my timetable\",\n    \"Faculty information\",\n    \"Check fees\",\n    \"Library hours\"\n  ];\n\n  const handleQuickAction = async (action) => {\n    const userMessage = { sender: \"user\", text: action, timestamp: new Date() };\n    setMessages(prev => [...prev, userMessage]);\n    setIsTyping(true);\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/chat\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ message: action })\n      });\n      const data = await response.json();\n      \n      setTimeout(() => {\n        const botMessage = { sender: \"bot\", text: data.reply, timestamp: new Date() };\n        setMessages(prev => [...prev, botMessage]);\n        setIsTyping(false);\n        saveToHistory(action, data.reply);\n      }, 500);\n    } catch (error) {\n      setTimeout(() => {\n        const errorMessage = { \n          sender: \"bot\", \n          text: \"Sorry, I'm having trouble connecting. Please try again later.\",\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, errorMessage]);\n        setIsTyping(false);\n      }, 500);\n    }\n  };\n\n  return (\n    <div className={darkMode ? \"dark\" : \"\"}>\n      <div className=\"min-h-screen bg-gradient-to-br from-purple-500 to-purple-700 dark:from-gray-900 dark:to-gray-800 flex items-center justify-center p-4 transition-colors duration-300\">\n        <div className=\"w-full max-width-4xl\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-3xl shadow-2xl overflow-hidden flex flex-col h-[700px] transition-colors duration-300\">\n            \n            {/* Header */}\n            <div className=\"bg-gradient-to-r from-purple-600 to-purple-800 dark:from-gray-700 dark:to-gray-900 px-6 py-4 transition-colors duration-300\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-4\">\n                  <div className=\"w-12 h-12 bg-white/20 rounded-full flex items-center justify-center backdrop-blur\">\n                    <svg viewBox=\"0 0 24 24\" fill=\"none\" className=\"w-7 h-7 text-white\">\n                      <path d=\"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\" fill=\"currentColor\"/>\n                    </svg>\n                  </div>\n                  <div>\n                    <h1 className=\"text-xl font-bold text-white\">IAI Capstone</h1>\n                    <p className=\"text-sm text-white/90\">Batch-01 • Section-14</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center gap-2\">\n                  <button\n                    onClick={() => setShowHistory(!showHistory)}\n                    className=\"p-2 hover:bg-white/10 rounded-lg transition-colors\"\n                    title=\"Chat History\"\n                  >\n                    <History className=\"w-5 h-5 text-white\" />\n                  </button>\n                  <button\n                    onClick={() => setDarkMode(!darkMode)}\n                    className=\"p-2 hover:bg-white/10 rounded-lg transition-colors\"\n                    title=\"Toggle Theme\"\n                  >\n                    {darkMode ? <Sun className=\"w-5 h-5 text-white\" /> : <Moon className=\"w-5 h-5 text-white\" />}\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {/* History Sidebar */}\n            {showHistory && (\n              <div className=\"absolute right-0 top-0 h-full w-80 bg-white dark:bg-gray-800 shadow-2xl z-50 border-l border-gray-200 dark:border-gray-700 transition-colors duration-300\">\n                <div className=\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700\">\n                  <h3 className=\"font-semibold text-gray-900 dark:text-white\">Chat History</h3>\n                  <div className=\"flex gap-2\">\n                    {chatHistory.length > 0 && (\n                      <button\n                        onClick={clearHistory}\n                        className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\n                        title=\"Clear History\"\n                      >\n                        <Trash2 className=\"w-4 h-4 text-gray-600 dark:text-gray-400\" />\n                      </button>\n                    )}\n                    <button\n                      onClick={() => setShowHistory(false)}\n                      className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\n                    >\n                      <X className=\"w-4 h-4 text-gray-600 dark:text-gray-400\" />\n                    </button>\n                  </div>\n                </div>\n                <div className=\"overflow-y-auto h-full pb-20\">\n                  {chatHistory.length === 0 ? (\n                    <div className=\"p-4 text-center text-gray-500 dark:text-gray-400\">\n                      No chat history yet\n                    </div>\n                  ) : (\n                    chatHistory.map(item => (\n                      <div\n                        key={item.id}\n                        onClick={() => loadHistoryItem(item)}\n                        className=\"p-4 border-b border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer transition-colors\"\n                      >\n                        <p className=\"text-sm font-medium text-gray-900 dark:text-white truncate\">{item.user}</p>\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1 truncate\">{item.bot}</p>\n                        <p className=\"text-xs text-gray-400 dark:text-gray-500 mt-1\">\n                          {new Date(item.timestamp).toLocaleString()}\n                        </p>\n                      </div>\n                    ))\n                  )}\n                </div>\n              </div>\n            )}\n\n            {/* Messages */}\n            <div className=\"flex-1 overflow-y-auto p-6 bg-gray-50 dark:bg-gray-900 transition-colors duration-300\">\n              {messages.length === 1 && (\n                <div className=\"mb-6\">\n                  <p className=\"text-sm font-semibold text-gray-600 dark:text-gray-400 mb-3\">Quick Actions:</p>\n                  <div className=\"grid grid-cols-2 gap-3\">\n                    {quickActions.map((action, idx) => (\n                      <button\n                        key={idx}\n                        onClick={() => handleQuickAction(action)}\n                        className=\"p-3 bg-white dark:bg-gray-800 border-2 border-gray-200 dark:border-gray-700 rounded-xl text-gray-700 dark:text-gray-300 text-sm font-medium hover:border-purple-500 dark:hover:border-purple-600 hover:text-purple-600 dark:hover:text-purple-400 transition-all hover:-translate-y-0.5\"\n                      >\n                        {action}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              )}\n              \n              {messages.map((msg, idx) => (\n                <div key={idx} className={`flex gap-3 mb-6 ${msg.sender === \"user\" ? \"flex-row-reverse\" : \"\"}`}>\n                  <div className={`w-9 h-9 rounded-full flex items-center justify-center flex-shrink-0 ${\n                    msg.sender === \"bot\" \n                      ? \"bg-gradient-to-br from-purple-600 to-purple-800 dark:from-purple-700 dark:to-purple-900\" \n                      : \"bg-gradient-to-br from-pink-500 to-red-500\"\n                  }`}>\n                    <svg viewBox=\"0 0 24 24\" fill=\"none\" className=\"w-5 h-5 text-white\">\n                      {msg.sender === \"bot\" ? (\n                        <path d=\"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\" fill=\"currentColor\"/>\n                      ) : (\n                        <path d=\"M12 12C14.21 12 16 10.21 16 8C16 5.79 14.21 4 12 4C9.79 4 8 5.79 8 8C8 10.21 9.79 12 12 12ZM12 14C9.33 14 4 15.34 4 18V20H20V18C20 15.34 14.67 14 12 14Z\" fill=\"currentColor\"/>\n                      )}\n                    </svg>\n                  </div>\n                  <div className=\"flex-1 max-w-[70%]\">\n                    <div className={`rounded-2xl p-4 ${\n                      msg.sender === \"bot\"\n                        ? \"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700\"\n                        : \"bg-gradient-to-r from-purple-600 to-purple-800 dark:from-purple-700 dark:to-purple-900 text-white\"\n                    } transition-colors duration-300`}>\n                      <p className=\"text-sm leading-relaxed whitespace-pre-wrap\">{msg.text}</p>\n                    </div>\n                    <p className={`text-xs mt-1 ${msg.sender === \"user\" ? \"text-right\" : \"\"} text-gray-500 dark:text-gray-400`}>\n                      {msg.timestamp.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' })}\n                    </p>\n                  </div>\n                </div>\n              ))}\n              \n              {isTyping && (\n                <div className=\"flex gap-3 mb-6\">\n                  <div className=\"w-9 h-9 rounded-full flex items-center justify-center flex-shrink-0 bg-gradient-to-br from-purple-600 to-purple-800\">\n                    <svg viewBox=\"0 0 24 24\" fill=\"none\" className=\"w-5 h-5 text-white\">\n                      <path d=\"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\" fill=\"currentColor\"/>\n                    </svg>\n                  </div>\n                  <div className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-2xl p-4 transition-colors duration-300\">\n                    <div className=\"flex gap-1\">\n                      <span className=\"w-2 h-2 bg-gray-400 dark:bg-gray-500 rounded-full animate-bounce\" style={{ animationDelay: '0s' }}></span>\n                      <span className=\"w-2 h-2 bg-gray-400 dark:bg-gray-500 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></span>\n                      <span className=\"w-2 h-2 bg-gray-400 dark:bg-gray-500 rounded-full animate-bounce\" style={{ animationDelay: '0.4s' }}></span>\n                    </div>\n                  </div>\n                </div>\n              )}\n              \n              <div ref={messagesEndRef} />\n            </div>\n\n            {/* Input */}\n            <div className=\"p-4 bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 transition-colors duration-300\">\n              <div className=\"flex gap-3 items-center bg-gray-100 dark:bg-gray-900 rounded-2xl p-2 border-2 border-gray-200 dark:border-gray-700 focus-within:border-purple-500 dark:focus-within:border-purple-600 transition-all\">\n                <input\n                  type=\"text\"\n                  value={input}\n                  placeholder=\"Type your message...\"\n                  onChange={(e) => setInput(e.target.value)}\n                  onKeyDown={handleKeyPress}\n                  disabled={isTyping}\n                  className=\"flex-1 bg-transparent px-3 py-2 outline-none text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n                />\n                <button\n                  onClick={handleSend}\n                  disabled={!input.trim() || isTyping}\n                  className=\"w-10 h-10 rounded-xl bg-gradient-to-r from-purple-600 to-purple-800 dark:from-purple-700 dark:to-purple-900 text-white flex items-center justify-center hover:scale-105 active:scale-95 disabled:opacity-40 disabled:cursor-not-allowed transition-all\"\n                >\n                  <svg viewBox=\"0 0 24 24\" fill=\"none\" className=\"w-5 h-5\">\n                    <path d=\"M2.01 21L23 12L2.01 3L2 10L17 12L2 14L2.01 21Z\" fill=\"currentColor\"/>\n                  </svg>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,IAAI,EAAEC,GAAG,EAAEC,OAAO,EAAEC,CAAC,EAAEC,MAAM,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,CACvC;IACEc,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE,4KAA4K;IAClLC,SAAS,EAAE,IAAIC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}