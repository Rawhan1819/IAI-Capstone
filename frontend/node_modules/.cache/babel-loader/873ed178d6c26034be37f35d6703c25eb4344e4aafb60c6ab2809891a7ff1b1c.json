{"ast":null,"code":"var _jsxFileName = \"/home/adnim1/Desktop/IAI-CAPSTONE/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useRef, useEffect } from \"react\";\n// import \"./App.css\";\n\n// function App() {\n//   const [messages, setMessages] = useState([\n//     { sender: \"bot\", text: \"Hello! I am your Campus Helpdesk Bot. How can I help you today?\" }\n//   ]);\n//   const [input, setInput] = useState(\"\");\n//   const messagesEndRef = useRef(null);\n\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   };\n\n//   useEffect(scrollToBottom, [messages]);\n\n//   const handleSend = async () => {\n//     if (!input.trim()) return;\n//     const userMessage = { sender: \"user\", text: input };\n//     setMessages(prev => [...prev, userMessage]);\n//     const response = await fetch(\"http://127.0.0.1:5000/api/chat\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ message: input })\n//     });\n//     const data = await response.json();\n//     const botMessage = { sender: \"bot\", text: data.reply };\n//     setMessages(prev => [...prev, botMessage]);\n//     setInput(\"\");\n//   };\n\n//   const handleKeyPress = (e) => {\n//     if (e.key === \"Enter\") handleSend();\n//   };\n\n//   return (\n//     <div className=\"chat-container\">\n//       <div className=\"chat-header\">Campus Helpdesk Chatbot</div>\n//       <div className=\"chat-messages\">\n//         {messages.map((msg, idx) => (\n//           <div key={idx} className={msg.sender === \"user\" ? \"message-user\" : \"message-bot\"}>\n//             <div className=\"bubble\">{msg.text}</div>\n//           </div>\n//         ))}\n//         <div ref={messagesEndRef} />\n//       </div>\n//       <div className=\"chat-input\">\n//         <input\n//           type=\"text\"\n//           value={input}\n//           placeholder=\"Type your message...\"\n//           onChange={(e) => setInput(e.target.value)}\n//           onKeyDown={handleKeyPress}\n//         />\n//         <button onClick={handleSend}>Send</button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n//#2\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: \"bot\",\n    text: \"Hello! I'm your Campus Helpdesk Assistant. I can help you with timetables, faculty information, fees, hostel details, library hours, and more. How can I assist you today?\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(scrollToBottom, [messages]);\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: \"user\",\n      text: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    setIsTyping(true);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await response.json();\n      setTimeout(() => {\n        const botMessage = {\n          sender: \"bot\",\n          text: data.reply\n        };\n        setMessages(prev => [...prev, botMessage]);\n        setIsTyping(false);\n      }, 500);\n    } catch (error) {\n      setTimeout(() => {\n        const errorMessage = {\n          sender: \"bot\",\n          text: \"Sorry, I'm having trouble connecting. Please try again later.\"\n        };\n        setMessages(prev => [...prev, errorMessage]);\n        setIsTyping(false);\n      }, 500);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  const quickActions = [\"Who is my IAI faculty?\", \"Syllabus for IAI\", \"Tuesday classes for Section-14\", \"Library hours\"];\n  const handleQuickAction = action => {\n    setInput(action);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bot-avatar\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 5C13.66 5 15 6.34 15 8C15 9.66 13.66 11 12 11C10.34 11 9 9.66 9 8C9 6.34 10.34 5 12 5ZM12 19.2C9.5 19.2 7.29 17.92 6 15.98C6.03 13.99 10 12.9 12 12.9C13.99 12.9 17.97 13.99 18 15.98C16.71 17.92 14.5 19.2 12 19.2Z\",\n                  fill: \"currentColor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Campus Helpdesk\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"status\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"status-dot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 39\n                }, this), \"Online\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: [messages.length === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quick-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"quick-actions-title\",\n              children: \"Quick Actions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"action-buttons\",\n              children: quickActions.map((action, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-btn\",\n                onClick: () => handleQuickAction(action),\n                children: action\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.sender === \"user\" ? \"message-user\" : \"message-bot\"}`,\n            children: [msg.sender === \"bot\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar bot-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\",\n                  fill: \"currentColor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bubble\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bubble-text\",\n                children: msg.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-time\",\n                children: new Date().toLocaleTimeString('en-US', {\n                  hour: '2-digit',\n                  minute: '2-digit'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), msg.sender === \"user\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar user-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M12 12C14.21 12 16 10.21 16 8C16 5.79 14.21 4 12 4C9.79 4 8 5.79 8 8C8 10.21 9.79 12 12 12ZM12 14C9.33 14 4 15.34 4 18V20H20V18C20 15.34 14.67 14 12 14Z\",\n                  fill: \"currentColor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message message-bot\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar bot-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\",\n                  fill: \"currentColor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bubble typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: input,\n              placeholder: \"Type your message...\",\n              onChange: e => setInput(e.target.value),\n              onKeyDown: handleKeyPress,\n              disabled: isTyping\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSend,\n              disabled: !input.trim() || isTyping,\n              className: \"send-btn\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M2.01 21L23 12L2.01 3L2 10L17 12L2 14L2.01 21Z\",\n                  fill: \"currentColor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9FZY0CGZkfi7BNlQw2QIfVaR87I=\");\n_c = App;\nexport default App;\n\n// // #3\n// import React, { useState, useRef, useEffect } from \"react\";\n// import \"./App.css\";\n\n// function App() {\n//   const [messages, setMessages] = useState([\n//     { \n//       sender: \"bot\", \n//       text: \"Hello! I'm your Campus Helpdesk Assistant. I can help you with timetables, faculty information, fees, hostel details, library hours, and more. How can I assist you today?\" \n//     }\n//   ]);\n//   const [input, setInput] = useState(\"\");\n//   const [isTyping, setIsTyping] = useState(false);\n//   const messagesEndRef = useRef(null);\n\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   };\n\n//   useEffect(scrollToBottom, [messages]);\n\n//   const handleSend = async () => {\n//     if (!input.trim()) return;\n\n//     const userMessage = { sender: \"user\", text: input };\n//     setMessages(prev => [...prev, userMessage]);\n//     setInput(\"\");\n//     setIsTyping(true);\n\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:5000/api/chat\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ message: input })\n//       });\n//       const data = await response.json();\n\n//       setTimeout(() => {\n//         const botMessage = { sender: \"bot\", text: data.reply };\n//         setMessages(prev => [...prev, botMessage]);\n//         setIsTyping(false);\n//       }, 500);\n//     } catch (error) {\n//       setTimeout(() => {\n//         const errorMessage = { \n//           sender: \"bot\", \n//           text: \"Sorry, I'm having trouble connecting. Please try again later.\" \n//         };\n//         setMessages(prev => [...prev, errorMessage]);\n//         setIsTyping(false);\n//       }, 500);\n//     }\n//   };\n\n//   const handleKeyPress = (e) => {\n//     if (e.key === \"Enter\" && !e.shiftKey) {\n//       e.preventDefault();\n//       handleSend();\n//     }\n//   };\n\n//   const quickActions = [\n//     \"Monday classes for Section-14\",\n//     \"Who is my IAI faculty?\",\n//     \"Syllabus for IAI\",\n//     \"Saturday classes for section-14\"\n//   ];\n\n//   const handleQuickAction = async (action) => {\n//     setInput(action);\n\n//     const userMessage = { sender: \"user\", text: action };\n//     setMessages(prev => [...prev, userMessage]);\n//     setIsTyping(true);\n\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:5000/api/chat\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ message: action })\n//       });\n//       const data = await response.json();\n\n//       setTimeout(() => {\n//         const botMessage = { sender: \"bot\", text: data.reply };\n//         setMessages(prev => [...prev, botMessage]);\n//         setIsTyping(false);\n//         setInput(\"\");\n//       }, 500);\n//     } catch (error) {\n//       setTimeout(() => {\n//         const errorMessage = { \n//           sender: \"bot\", \n//           text: \"Sorry, I'm having trouble connecting. Please try again later.\" \n//         };\n//         setMessages(prev => [...prev, errorMessage]);\n//         setIsTyping(false);\n//         setInput(\"\");\n//       }, 500);\n//     }\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       <div className=\"chat-wrapper\">\n//         <div className=\"chat-container\">\n//           <div className=\"chat-header\">\n//             <div className=\"header-content\">\n//               <div className=\"bot-avatar\">\n//                 <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                   <path d=\"M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 5C13.66 5 15 6.34 15 8C15 9.66 13.66 11 12 11C10.34 11 9 9.66 9 8C9 6.34 10.34 5 12 5ZM12 19.2C9.5 19.2 7.29 17.92 6 15.98C6.03 13.99 10 12.9 12 12.9C13.99 12.9 17.97 13.99 18 15.98C16.71 17.92 14.5 19.2 12 19.2Z\" fill=\"currentColor\"/>\n//                 </svg>\n//               </div>\n//               <div className=\"header-text\">\n//                 <h1>Campus Helpdesk</h1>\n//                 <p className=\"status\"><span className=\"status-dot\"></span>Online</p>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"chat-messages\">\n//             {messages.length === 1 && (\n//               <div className=\"quick-actions\">\n//                 <p className=\"quick-actions-title\">Quick Actions:</p>\n//                 <div className=\"action-buttons\">\n//                   {quickActions.map((action, idx) => (\n//                     <button \n//                       key={idx} \n//                       className=\"action-btn\"\n//                       onClick={() => handleQuickAction(action)}\n//                     >\n//                       {action}\n//                     </button>\n//                   ))}\n//                 </div>\n//               </div>\n//             )}\n\n//             {messages.map((msg, idx) => (\n//               <div key={idx} className={`message ${msg.sender === \"user\" ? \"message-user\" : \"message-bot\"}`}>\n//                 {msg.sender === \"bot\" && (\n//                   <div className=\"message-avatar bot-icon\">\n//                     <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                       <path d=\"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\" fill=\"currentColor\"/>\n//                     </svg>\n//                   </div>\n//                 )}\n//                 <div className=\"bubble\">\n//                   <div className=\"bubble-text\">{msg.text}</div>\n//                   <div className=\"message-time\">\n//                     {new Date().toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' })}\n//                   </div>\n//                 </div>\n//                 {msg.sender === \"user\" && (\n//                   <div className=\"message-avatar user-icon\">\n//                     <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                       <path d=\"M12 12C14.21 12 16 10.21 16 8C16 5.79 14.21 4 12 4C9.79 4 8 5.79 8 8C8 10.21 9.79 12 12 12ZM12 14C9.33 14 4 15.34 4 18V20H20V18C20 15.34 14.67 14 12 14Z\" fill=\"currentColor\"/>\n//                     </svg>\n//                   </div>\n//                 )}\n//               </div>\n//             ))}\n\n//             {isTyping && (\n//               <div className=\"message message-bot\">\n//                 <div className=\"message-avatar bot-icon\">\n//                   <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                     <path d=\"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\" fill=\"currentColor\"/>\n//                   </svg>\n//                 </div>\n//                 <div className=\"bubble typing-indicator\">\n//                   <span></span>\n//                   <span></span>\n//                   <span></span>\n//                 </div>\n//               </div>\n//             )}\n\n//             <div ref={messagesEndRef} />\n//           </div>\n\n//           <div className=\"chat-input\">\n//             <div className=\"input-wrapper\">\n//               <input\n//                 type=\"text\"\n//                 value={input}\n//                 placeholder=\"Type your message...\"\n//                 onChange={(e) => setInput(e.target.value)}\n//                 onKeyDown={handleKeyPress}\n//                 disabled={isTyping}\n//               />\n//               <button \n//                 onClick={handleSend} \n//                 disabled={!input.trim() || isTyping}\n//                 className=\"send-btn\"\n//               >\n//                 <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                   <path d=\"M2.01 21L23 12L2.01 3L2 10L17 12L2 14L2.01 21Z\" fill=\"currentColor\"/>\n//                 </svg>\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","messages","setMessages","sender","text","input","setInput","isTyping","setIsTyping","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","userMessage","prev","response","fetch","method","headers","body","JSON","stringify","message","data","json","setTimeout","botMessage","reply","error","errorMessage","handleKeyPress","e","key","shiftKey","preventDefault","quickActions","handleQuickAction","action","className","children","viewBox","fill","xmlns","d","fileName","_jsxFileName","lineNumber","columnNumber","length","map","idx","onClick","msg","Date","toLocaleTimeString","hour","minute","ref","type","value","placeholder","onChange","target","onKeyDown","disabled","_c","$RefreshReg$"],"sources":["/home/adnim1/Desktop/IAI-CAPSTONE/frontend/src/App.jsx"],"sourcesContent":["// import React, { useState, useRef, useEffect } from \"react\";\n// import \"./App.css\";\n\n// function App() {\n//   const [messages, setMessages] = useState([\n//     { sender: \"bot\", text: \"Hello! I am your Campus Helpdesk Bot. How can I help you today?\" }\n//   ]);\n//   const [input, setInput] = useState(\"\");\n//   const messagesEndRef = useRef(null);\n\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   };\n\n//   useEffect(scrollToBottom, [messages]);\n\n//   const handleSend = async () => {\n//     if (!input.trim()) return;\n//     const userMessage = { sender: \"user\", text: input };\n//     setMessages(prev => [...prev, userMessage]);\n//     const response = await fetch(\"http://127.0.0.1:5000/api/chat\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ message: input })\n//     });\n//     const data = await response.json();\n//     const botMessage = { sender: \"bot\", text: data.reply };\n//     setMessages(prev => [...prev, botMessage]);\n//     setInput(\"\");\n//   };\n\n//   const handleKeyPress = (e) => {\n//     if (e.key === \"Enter\") handleSend();\n//   };\n\n//   return (\n//     <div className=\"chat-container\">\n//       <div className=\"chat-header\">Campus Helpdesk Chatbot</div>\n//       <div className=\"chat-messages\">\n//         {messages.map((msg, idx) => (\n//           <div key={idx} className={msg.sender === \"user\" ? \"message-user\" : \"message-bot\"}>\n//             <div className=\"bubble\">{msg.text}</div>\n//           </div>\n//         ))}\n//         <div ref={messagesEndRef} />\n//       </div>\n//       <div className=\"chat-input\">\n//         <input\n//           type=\"text\"\n//           value={input}\n//           placeholder=\"Type your message...\"\n//           onChange={(e) => setInput(e.target.value)}\n//           onKeyDown={handleKeyPress}\n//         />\n//         <button onClick={handleSend}>Send</button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n//#2\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [messages, setMessages] = useState([\n    { \n      sender: \"bot\", \n      text: \"Hello! I'm your Campus Helpdesk Assistant. I can help you with timetables, faculty information, fees, hostel details, library hours, and more. How can I assist you today?\" \n    }\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    \n    const userMessage = { sender: \"user\", text: input };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    setIsTyping(true);\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/chat\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ message: input })\n      });\n      const data = await response.json();\n      \n      setTimeout(() => {\n        const botMessage = { sender: \"bot\", text: data.reply };\n        setMessages(prev => [...prev, botMessage]);\n        setIsTyping(false);\n      }, 500);\n    } catch (error) {\n      setTimeout(() => {\n        const errorMessage = { \n          sender: \"bot\", \n          text: \"Sorry, I'm having trouble connecting. Please try again later.\" \n        };\n        setMessages(prev => [...prev, errorMessage]);\n        setIsTyping(false);\n      }, 500);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  const quickActions = [\n    \"Who is my IAI faculty?\",\n    \"Syllabus for IAI\",\n    \"Tuesday classes for Section-14\",\n    \"Library hours\"\n  ];\n\n  const handleQuickAction = (action) => {\n    setInput(action);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"chat-wrapper\">\n        <div className=\"chat-container\">\n          <div className=\"chat-header\">\n            <div className=\"header-content\">\n              <div className=\"bot-avatar\">\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 5C13.66 5 15 6.34 15 8C15 9.66 13.66 11 12 11C10.34 11 9 9.66 9 8C9 6.34 10.34 5 12 5ZM12 19.2C9.5 19.2 7.29 17.92 6 15.98C6.03 13.99 10 12.9 12 12.9C13.99 12.9 17.97 13.99 18 15.98C16.71 17.92 14.5 19.2 12 19.2Z\" fill=\"currentColor\"/>\n                </svg>\n              </div>\n              <div className=\"header-text\">\n                <h1>Campus Helpdesk</h1>\n                <p className=\"status\"><span className=\"status-dot\"></span>Online</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"chat-messages\">\n            {messages.length === 1 && (\n              <div className=\"quick-actions\">\n                <p className=\"quick-actions-title\">Quick Actions:</p>\n                <div className=\"action-buttons\">\n                  {quickActions.map((action, idx) => (\n                    <button \n                      key={idx} \n                      className=\"action-btn\"\n                      onClick={() => handleQuickAction(action)}\n                    >\n                      {action}\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n            \n            {messages.map((msg, idx) => (\n              <div key={idx} className={`message ${msg.sender === \"user\" ? \"message-user\" : \"message-bot\"}`}>\n                {msg.sender === \"bot\" && (\n                  <div className=\"message-avatar bot-icon\">\n                    <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path d=\"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\" fill=\"currentColor\"/>\n                    </svg>\n                  </div>\n                )}\n                <div className=\"bubble\">\n                  <div className=\"bubble-text\">{msg.text}</div>\n                  <div className=\"message-time\">\n                    {new Date().toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' })}\n                  </div>\n                </div>\n                {msg.sender === \"user\" && (\n                  <div className=\"message-avatar user-icon\">\n                    <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path d=\"M12 12C14.21 12 16 10.21 16 8C16 5.79 14.21 4 12 4C9.79 4 8 5.79 8 8C8 10.21 9.79 12 12 12ZM12 14C9.33 14 4 15.34 4 18V20H20V18C20 15.34 14.67 14 12 14Z\" fill=\"currentColor\"/>\n                    </svg>\n                  </div>\n                )}\n              </div>\n            ))}\n            \n            {isTyping && (\n              <div className=\"message message-bot\">\n                <div className=\"message-avatar bot-icon\">\n                  <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\" fill=\"currentColor\"/>\n                  </svg>\n                </div>\n                <div className=\"bubble typing-indicator\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            )}\n            \n            <div ref={messagesEndRef} />\n          </div>\n\n          <div className=\"chat-input\">\n            <div className=\"input-wrapper\">\n              <input\n                type=\"text\"\n                value={input}\n                placeholder=\"Type your message...\"\n                onChange={(e) => setInput(e.target.value)}\n                onKeyDown={handleKeyPress}\n                disabled={isTyping}\n              />\n              <button \n                onClick={handleSend} \n                disabled={!input.trim() || isTyping}\n                className=\"send-btn\"\n              >\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M2.01 21L23 12L2.01 3L2 10L17 12L2 14L2.01 21Z\" fill=\"currentColor\"/>\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n// // #3\n// import React, { useState, useRef, useEffect } from \"react\";\n// import \"./App.css\";\n\n// function App() {\n//   const [messages, setMessages] = useState([\n//     { \n//       sender: \"bot\", \n//       text: \"Hello! I'm your Campus Helpdesk Assistant. I can help you with timetables, faculty information, fees, hostel details, library hours, and more. How can I assist you today?\" \n//     }\n//   ]);\n//   const [input, setInput] = useState(\"\");\n//   const [isTyping, setIsTyping] = useState(false);\n//   const messagesEndRef = useRef(null);\n\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   };\n\n//   useEffect(scrollToBottom, [messages]);\n\n//   const handleSend = async () => {\n//     if (!input.trim()) return;\n    \n//     const userMessage = { sender: \"user\", text: input };\n//     setMessages(prev => [...prev, userMessage]);\n//     setInput(\"\");\n//     setIsTyping(true);\n\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:5000/api/chat\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ message: input })\n//       });\n//       const data = await response.json();\n      \n//       setTimeout(() => {\n//         const botMessage = { sender: \"bot\", text: data.reply };\n//         setMessages(prev => [...prev, botMessage]);\n//         setIsTyping(false);\n//       }, 500);\n//     } catch (error) {\n//       setTimeout(() => {\n//         const errorMessage = { \n//           sender: \"bot\", \n//           text: \"Sorry, I'm having trouble connecting. Please try again later.\" \n//         };\n//         setMessages(prev => [...prev, errorMessage]);\n//         setIsTyping(false);\n//       }, 500);\n//     }\n//   };\n\n//   const handleKeyPress = (e) => {\n//     if (e.key === \"Enter\" && !e.shiftKey) {\n//       e.preventDefault();\n//       handleSend();\n//     }\n//   };\n\n//   const quickActions = [\n//     \"Monday classes for Section-14\",\n//     \"Who is my IAI faculty?\",\n//     \"Syllabus for IAI\",\n//     \"Saturday classes for section-14\"\n//   ];\n\n//   const handleQuickAction = async (action) => {\n//     setInput(action);\n    \n//     const userMessage = { sender: \"user\", text: action };\n//     setMessages(prev => [...prev, userMessage]);\n//     setIsTyping(true);\n\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:5000/api/chat\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ message: action })\n//       });\n//       const data = await response.json();\n      \n//       setTimeout(() => {\n//         const botMessage = { sender: \"bot\", text: data.reply };\n//         setMessages(prev => [...prev, botMessage]);\n//         setIsTyping(false);\n//         setInput(\"\");\n//       }, 500);\n//     } catch (error) {\n//       setTimeout(() => {\n//         const errorMessage = { \n//           sender: \"bot\", \n//           text: \"Sorry, I'm having trouble connecting. Please try again later.\" \n//         };\n//         setMessages(prev => [...prev, errorMessage]);\n//         setIsTyping(false);\n//         setInput(\"\");\n//       }, 500);\n//     }\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       <div className=\"chat-wrapper\">\n//         <div className=\"chat-container\">\n//           <div className=\"chat-header\">\n//             <div className=\"header-content\">\n//               <div className=\"bot-avatar\">\n//                 <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                   <path d=\"M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 5C13.66 5 15 6.34 15 8C15 9.66 13.66 11 12 11C10.34 11 9 9.66 9 8C9 6.34 10.34 5 12 5ZM12 19.2C9.5 19.2 7.29 17.92 6 15.98C6.03 13.99 10 12.9 12 12.9C13.99 12.9 17.97 13.99 18 15.98C16.71 17.92 14.5 19.2 12 19.2Z\" fill=\"currentColor\"/>\n//                 </svg>\n//               </div>\n//               <div className=\"header-text\">\n//                 <h1>Campus Helpdesk</h1>\n//                 <p className=\"status\"><span className=\"status-dot\"></span>Online</p>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"chat-messages\">\n//             {messages.length === 1 && (\n//               <div className=\"quick-actions\">\n//                 <p className=\"quick-actions-title\">Quick Actions:</p>\n//                 <div className=\"action-buttons\">\n//                   {quickActions.map((action, idx) => (\n//                     <button \n//                       key={idx} \n//                       className=\"action-btn\"\n//                       onClick={() => handleQuickAction(action)}\n//                     >\n//                       {action}\n//                     </button>\n//                   ))}\n//                 </div>\n//               </div>\n//             )}\n            \n//             {messages.map((msg, idx) => (\n//               <div key={idx} className={`message ${msg.sender === \"user\" ? \"message-user\" : \"message-bot\"}`}>\n//                 {msg.sender === \"bot\" && (\n//                   <div className=\"message-avatar bot-icon\">\n//                     <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                       <path d=\"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\" fill=\"currentColor\"/>\n//                     </svg>\n//                   </div>\n//                 )}\n//                 <div className=\"bubble\">\n//                   <div className=\"bubble-text\">{msg.text}</div>\n//                   <div className=\"message-time\">\n//                     {new Date().toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' })}\n//                   </div>\n//                 </div>\n//                 {msg.sender === \"user\" && (\n//                   <div className=\"message-avatar user-icon\">\n//                     <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                       <path d=\"M12 12C14.21 12 16 10.21 16 8C16 5.79 14.21 4 12 4C9.79 4 8 5.79 8 8C8 10.21 9.79 12 12 12ZM12 14C9.33 14 4 15.34 4 18V20H20V18C20 15.34 14.67 14 12 14Z\" fill=\"currentColor\"/>\n//                     </svg>\n//                   </div>\n//                 )}\n//               </div>\n//             ))}\n            \n//             {isTyping && (\n//               <div className=\"message message-bot\">\n//                 <div className=\"message-avatar bot-icon\">\n//                   <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                     <path d=\"M20 9V7C20 5.9 19.1 5 18 5H14V3H10V5H6C4.9 5 4 5.9 4 7V9C2.9 9 2 9.9 2 11V13C2 14.1 2.9 15 4 15V19C4 20.1 4.9 21 6 21H18C19.1 21 20 20.1 20 19V15C21.1 15 22 14.1 22 13V11C22 9.9 21.1 9 20 9ZM18 19H6V13H18V19ZM9 11C9 10.45 9.45 10 10 10C10.55 10 11 10.45 11 11C11 11.55 10.55 12 10 12C9.45 12 9 11.55 9 11ZM13 11C13 10.45 13.45 10 14 10C14.55 10 15 10.45 15 11C15 11.55 14.55 12 14 12C13.45 12 13 11.55 13 11Z\" fill=\"currentColor\"/>\n//                   </svg>\n//                 </div>\n//                 <div className=\"bubble typing-indicator\">\n//                   <span></span>\n//                   <span></span>\n//                   <span></span>\n//                 </div>\n//               </div>\n//             )}\n            \n//             <div ref={messagesEndRef} />\n//           </div>\n\n//           <div className=\"chat-input\">\n//             <div className=\"input-wrapper\">\n//               <input\n//                 type=\"text\"\n//                 value={input}\n//                 placeholder=\"Type your message...\"\n//                 onChange={(e) => setInput(e.target.value)}\n//                 onKeyDown={handleKeyPress}\n//                 disabled={isTyping}\n//               />\n//               <button \n//                 onClick={handleSend} \n//                 disabled={!input.trim() || isTyping}\n//                 className=\"send-btn\"\n//               >\n//                 <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                   <path d=\"M2.01 21L23 12L2.01 3L2 10L17 12L2 14L2.01 21Z\" fill=\"currentColor\"/>\n//                 </svg>\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}